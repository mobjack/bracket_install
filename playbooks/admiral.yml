---
- hosts: brackets-admiral
  vars:
    ansible_python_interpreter: /usr/bin/python3
    admiral_ip: hostvars[inventory_hostname]['ansible_default_ipv4']['address']
    gluster_replicas: "{{ lookup('ini', 'chief_number section=brackets-admiral file=../hosts/fleet_setup.ini') }}"
    thehub: "{{ lookup('ini', 'thehub section=brackets-admiral file=../hosts/fleet_setup.ini') }}"
    include_vars: playbooks/bracket_vars.yml

  tasks:
  - name: Initialize Docker Swarm
    docker_swarm:
      state: present
    tags: swarm
    become: yes
    become_user: brackets
  
  - name: Get swarm key for later
    shell: docker swarm join-token worker | grep token | awk '{print $5}'
    register: docker_swarm_key
    become: yes
    become_user: brackets

  - name: Get swarm ip
    shell: docker swarm join-token worker | grep token | awk '{print $6}'
    register: docker_swarm_ip
    become: yes
    become_user: brackets

  - name: Join admiral to cluster as a worker
    docker_swarm:
      state: join
      advertise_addr: "{{ admiral_ip }}"
      join_token: "{{ docker_swarm_key }}"
      remote_addrs: [ "{{ docker_swarm_ip }}" ]
    become: yes
    become_user: brackets

  - name: Download docker images 
    docker_image:
      name: mobjack/brackets:local-syslog
      source: pull
    
  - name: Copy compose file to admiral
    copy:
      src: docker-compose.yml
      dest: /opt/brackets/
      owner: brackets
      group: brackets
      mode: '0644'
    become: yes
    become_user: brackets
    
  - name: Delete a network, disconnecting all containers
    docker_network:
      name: brackets
      state: absent
      force: yes
      
  - name: Create Brackets docker network
    docker_network:
        name: bracketapp
 
  - name: Create gluster db volume
    gluster_volume:
      name: bracket_db
      bricks: /bricks/brick1/db,/bricks/brick2/db
      rebalance: yes
      replicas: "{{ gluster_replicas }}"
      cluster: "{{ groups['fleetChiefs'] | join(',') }}"
      force: true
      state: present
    ignore_errors: yes  
    become: yes
  
  - name: waiting 2min for gluster to settle
    pause:
      minutes: 2

  - name: Set gluster db volume again
    gluster_volume:
      name: bracket_db
      bricks: /bricks/brick1/db,/bricks/brick2/db
      rebalance: yes
      replicas: "{{ gluster_replicas }}"
      cluster: "{{ groups['fleetChiefs'] | join(',') }}"
      force: true
      state: present
    become: yes
 
  - name: start gluster 
    gluster_volume:
      name: bracket_db
      state: started
    become: yes
 
